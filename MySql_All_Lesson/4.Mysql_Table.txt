#Table : =========================================================================================

#Create Table with column: ------------------------------
>>>CREATE TABLE books (
    book_id INT AUTO_INCREMENT,      -- book_id as an auto-incrementing integer
    title VARCHAR(255) NOT NULL,      -- book title
    author_id INT,                   -- foreign key that references authors table
    PRIMARY KEY (book_id),           -- primary key constraint on book_id
    FOREIGN KEY (author_id) REFERENCES authors(author_id)  -- foreign key constraint
    ON DELETE CASCADE   -- If an author is deleted, delete all their books.
    ON UPDATE CASCADE   -- If an author's ID is updated, update the author_id in books table as well.
);

>>>CREATE TABLE books (
    book_id INT AUTO_INCREMENT,      -- book_id as an auto-incrementing integer
    title VARCHAR(255) NOT NULL,      -- book title
    author_id INT,                   -- foreign key that references authors table
    PRIMARY KEY (book_id),           -- primary key constraint on book_id
    FOREIGN KEY (author_id) REFERENCES authors(author_id)
    ON DELETE SET NULL               -- Set foreign key to NULL if author is deleted
    ON UPDATE CASCADE               -- Update foreign key if author_id is updated
);

Choosing the Right Action

    Use CASCADE if you want related records to be automatically deleted or updated when the parent record changes.
    Use RESTRICT or NO ACTION if you want to prevent any changes to the parent record if there are dependent child records.
    Use SET NULL if you want to keep the child record but remove the link to the parent (by setting the foreign key to NULL).
    Use SET DEFAULT if you want to set the foreign key to a default value when the referenced row is deleted or updated.


#---------------------------------------------------------------------------------------

#Insert value into column into table : ---------------------------
-- Insert data into the table
INSERT INTO table (col_name, col_name) VALUES ('John', 'john@example.com');
INSERT INTO users (name, email) VALUES ('Alice', 'alice@example.com');


#Read data from table : -------------------------
>>> SELECT * FROM table_name;

#read specific column : 
>>> SELECT column1, column2 FROM table_name;


#show total column in the table : ----------------
>>>describe table_name

#search data form table : ----------------------
>>> SELECT * FROM table_name WHERE condition;
>>> SELECT * FROM users WHERE name = 'John';


#Update Table with column : ---------------------
>>> UPDATE table_name SET column1 = value1, column2 = value2 WHERE condition;
>>> UPDATE users SET email = 'newemail@example.com' WHERE id = 1;

#Delete table : ----------------------
>>>DELETE FROM table_name WHERE condition;
>>>DELETE FROM users WHERE id = 1;

#delete all: ------
>>> DELETE FROM table_name;

#Search data from Table : ------------------
>>> SELECT * FROM table_name WHERE column_name LIKE '%search_term%';
>>> SELECT * FROM users WHERE name LIKE '%John%';
>>> SELECT * FROM users WHERE name = 'John' AND email = 'john@example.com';


#Truncate Table (Remove All Data)

#If you want to remove all data and reset auto-increment (if any):-------------
>>>TRUNCATE TABLE table_name;

#Copy all tables from the old database to the new one:----------------
>>>CREATE TABLE new_database_name.table_name AS SELECT * FROM old_database_name.table_name;
